name: PR checks

on:
  pull_request:
    branches:
      - main

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: hashicorp/setup-terraform@v2

      - name: Check out repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - uses: actions/cache@v2
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: tflint-${{ hashFiles('.tflint.hcl') }}

      - uses: terraform-linters/setup-tflint@v2.0.0
        name: Setup TFLint

      - uses: pre-commit/action@v3.0.0
        name: Pre-commit checks

  generate-readme:
    runs-on: ubuntu-latest
    steps:

      - name: Check out repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Render terraform docs and push changes back to PR
        uses: terraform-docs/gh-actions@main
        with:
          working-dir: .
          output-file: README.md
          output-method: replace
          template: |-
            # Vertex AI Custom Code Service Agent

            This repo contains a Terraform module that enables the [Vertex AI Custom Code Service Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents).

            This is done by running a simple custom training job (CustomJob), because the Service Agent is created the first time it is used.

            This module relies on the `curl` tool being available on the system running Terraform.

            This module is available in the [Datatonic Terraform Registry](https://registry.terraform.io/namespaces/teamdatatonic).

            ## Development

            ### Local setup

            - Install [pre-commit](https://pre-commit.com/)
            - Install the pre-commit hooks - `pre-commit install`

            ### README

            The README file is autogenerated using [`terraform-docs`](https://github.com/terraform-docs/terraform-docs). This is done when you create a pull request (or push to an existing PR).

            You can customise the template (including this text for example) in `.github/workflows/pr-checks.yml`.

            {{ .Content }}
            
          git-push: "true"
